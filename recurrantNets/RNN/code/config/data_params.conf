#-------------------------------- NN new -----------------------------------------------
#
# 
# after pipeline is finished use this as the new NN
# steps:
#   1. we read out the root files and pickle them in python 2   
#   2. we read out the pickled files in pyhton 3 and generate the evt-dictionary
#       - this should be done by using the maximum number of features, as we can easily
#         remove features but we have to reproduce the whole evt-dic if we need a missing feature
#   3. use saved evt-dic in python 3
#
# #######################################################################################
# uncomment this NN section if overlapping features with real data are needed
# [NN]
# # data path are symbolic links to actual data
# max_entries:  { 'fmd':          None,
#                 'ad':           None,
#                 'v0':           None, 
#                 'calo_cluster': 10,
#                 'emcal':        20,
#                 'phos':         40, 
#                 'event':        None,
#                 'track':        2 }


# branches:   {  # 'fmd':           ['event_id',
#                #                   'multiplicity']

#             # , 'ad':            ['event_id',
#             #                     'multiplicity']
# #                                 'adc_charge',
# #                                 'time']

#             # , 'v0':            ['event_id',
#             #                     'multiplicity']
# #                                 'adc_charge',
# #                                 'time',
# #                                 'signal_width']

#             # , 'calo_cluster':  ['event_id',
#             #                     'energy']
# #                                 'shape_dispersion',
# #                                 'chi2',
# #                                 'cpv_distance']

#             # , 'emcal':         ['event_id',
#             #                     'amplitude']
# #                                 'time']

#             # , 'phos':          ['event_id',
#             #                     'amplitude']
# #                                 'time']
#             # , 
#                'event':         ['event_id',
#                                 'charge_sum',
#                                 'lhc16_filter_noAD',
#                                 'n_tracks']
#                                 # 'n_tracklets',
#                                 # 'n_singles',
#                                 # 'n_tracks_total',
#                                 # 'n_residuals',
#                              # #  'n_tracks_its_only',
#                                 # 'is_full_recon',
#                                 # 'tot_ad_mult',
#                              # #  'tot_ad_time',
#                              # #  'tot_ad_charge',
#                                 # 'tot_fmd_mult',
#                                 # 'tot_v0_mult',
#                              # #  'tot_v0_time',
#                              # #  'tot_v0_charge',
#                              # #  'tot_v0_sig_width',
#                                 # 'tot_emc_ampl',
#                              # #  'tot_emc_time',
#                                 # 'tot_phos_ampl',
#                              # #  'tot_phos_time',
#                                 # 'mc_process_type']


#             , 'track':         [ # 'event_id',
#                               # 'tof_bunch_crossing',
#                               # 'dca_vtx_z',
#                                 'pt',
#                                 'eta',
#                                 'phi',
#                                 'P',
#                                 'charge_sign',
#                                 'n_cls_its',
#                                 'n_cls_tpc',
#                                 # 'n_cls_trd',
#                                 'n_shared_cls_tpc',
#                                # 'pid_global',
#                                # 'pid_tpc_status',
#                                 'pid_tpc_signal',
#                                 'pid_tpc_n_sigma_pion',
#                                 'pid_tpc_n_sigma_kaon',
#                                 'pid_tpc_n_sigma_proton',
#                               # 'pid_tpc_proba_pion',
#                               # 'pid_tpc_proba_kaon',
#                               # 'pid_tpc_proba_proton',
#                               # 'pid_tof_status',
#                               # 'pid_tof_signal',
#                               # 'pid_tof_n_sigma_pion',
#                               # 'pid_tof_n_sigma_kaon',
#                               # 'pid_tof_n_sigma_proton',
#                               # 'pid_tof_proba_pion',
#                               # 'pid_tof_proba_kaon',
#                               # 'pid_tof_proba_proton',
#                               # 'pid_bayes_status',
                             
#                               # add electron and muon
#                               # and golden-chi2 
#                                 'pid_bayes_proba_electron',
#                                 'pid_bayes_proba_muon',
#                                 'golden_chi2',                             
                            
#                                 'pid_bayes_proba_pion',
#                                 'pid_bayes_proba_kaon',
#                                 'pid_bayes_proba_proton', 
#                                 'track_length',
#                               # 'global_chi2',
#                                 'its_chi2',
#                                 'tpc_chi2',
#                                 'pid_its_signal',
#                               # 'pid_its_signal_tuned',
#                               # 'pid_hmpid_signal',
#                               # 'pid_trd_signal',
#                               # 'pid_tof_signal_tuned',
#                               # 'pid_tpc_signal_tuned',
#                                 'xy_impact',
#                                 'z_impact'
#                               # 'dx_tof_impact',
#                               # 'dz_tof_impact',
#                               # 'phi_on_emc',
#                               # 'eta_on_emc',
#                               # 'pt_on_emc',
#                               # 'p_on_emc'
#                             ]

#           }

# missing_values: {} 
# # 'raw_track': {'dx_tof_impact': 999.0, 'dz_tof_impact': 999.0}
# #                   'track':     {'tof_bunch_crossing': -100.0, 'pid_tof_signal': 99999.0}
# #                 , 'ad':        {'time': -1024.0}
# #                 , 'v0':        {'time': -1024.0}
# #                 }


# # # values that are missing and do not have the masking value of -999
# # # will be overwritten to -999
# # missing_values: {}


# target: ['mc_process_type', 'is_full_recon']
# evt_id: 'event_id'
# event_string: 'event'
# # determines the number of tracks an event can have
# # to be processed further, the rest will be discarded
# #
# # specify a range by using a tuple:
# #   'tot_v0_mult': (0., 3.)
# # if we want a standard cut such as 'tot_v0_mult' < 2. 
# # we do: 
# #   'tot_v0_mult': (-1e-1000, 2.)
# # 1e1000 gets interpretet as inf
# cut_dic: {'n_tracks': [2],
#           'charge_sum': [0],
#           'lhc16_filter_noAD': 1
#          }
# # these features are no longer needed as they no longer contain
# # information after the cut (may contain info if list contains more
# # then 1 entry) 
# remove_features: ['n_tracks', 'charge_sum', 'charge_sign', 'lhc16_filter_noAD']


####################################################################################
# koala net with same architecture as NN
[koala]
# data path are symbolic links to actual data
max_entries:  { 'fmd':          None,
                'ad':           None,
                'v0':           None, 
                'calo_cluster': 10,
                'emcal':        20,
                'phos':         40, 
                'event':        None,
                'track':        2 }


branches:   { 'fmd':           ['multiplicity']

            , 'ad':            ['multiplicity',
                                'adc_charge',
                                'time']

            , 'v0':            ['multiplicity',
                                'adc_charge',
                                'time',
                                'signal_width']

            , 'calo_cluster':  ['energy',
                                'shape_dispersion']
#                                 'chi2',
#                                 'cpv_distance']

            , 'emcal':         ['amplitude',
                                'time']

            , 'phos':          ['amplitude',
                                'time']
#
            , 'event':         ['event_id',
                                'charge_sum',
                                'lhc16_filter_noAD',
                                'n_tracks',
                                'n_tracklets',
                                'n_singles',
                                'n_tracks_total',
                                'n_residuals',
                             #  'n_tracks_its_only',
                                'is_full_recon',
                                'tot_ad_mult',
                             #  'tot_ad_time',
                             #  'tot_ad_charge',
                                'tot_fmd_mult',
                                'tot_v0_mult',
                             #  'tot_v0_time',
                             #  'tot_v0_charge',
                             #  'tot_v0_sig_width',
                                'tot_emc_ampl',
                             #  'tot_emc_time',
                                'tot_phos_ampl',
                             #  'tot_phos_time',
                                'mc_process_type']

            , 'track':         [ # 'event_id',
                              # 'tof_bunch_crossing',
                              # 'dca_vtx_z',
                                'pt',
                                'eta',
                                'phi',
                                'P',
                                'charge_sign',
                                'n_cls_its',
                                'n_cls_tpc',
                                # 'n_cls_trd',
                                'n_shared_cls_tpc',
                               # 'pid_global',
                               # 'pid_tpc_status',
                                'pid_tpc_signal',
                                'pid_tpc_n_sigma_pion',
                                'pid_tpc_n_sigma_kaon',
                                'pid_tpc_n_sigma_proton',
                              # 'pid_tpc_proba_pion',
                              # 'pid_tpc_proba_kaon',
                              # 'pid_tpc_proba_proton',
                              # 'pid_tof_status',
                              # 'pid_tof_signal',
                              # 'pid_tof_n_sigma_pion',
                              # 'pid_tof_n_sigma_kaon',
                              # 'pid_tof_n_sigma_proton',
                              # 'pid_tof_proba_pion',
                              # 'pid_tof_proba_kaon',
                              # 'pid_tof_proba_proton',
                              # 'pid_bayes_status',
                             
                              # add electron and muon
                              # and golden-chi2 
                                'pid_bayes_proba_electron',
                                'pid_bayes_proba_muon',
                                'golden_chi2',                             
                            
                                'pid_bayes_proba_pion',
                                'pid_bayes_proba_kaon',
                                'pid_bayes_proba_proton', 
                                'track_length',
                              # 'global_chi2',
                                'its_chi2',
                                'tpc_chi2',
                                'pid_its_signal',
                              # 'pid_its_signal_tuned',
                              # 'pid_hmpid_signal',
                              # 'pid_trd_signal',
                              # 'pid_tof_signal_tuned',
                              # 'pid_tpc_signal_tuned',
                                'xy_impact',
                                'z_impact'
                              # 'dx_tof_impact',
                              # 'dz_tof_impact',
                              # 'phi_on_emc',
                              # 'eta_on_emc',
                              # 'pt_on_emc',
                              # 'p_on_emc'
                            ]

          }

missing_values: {} 
# 'raw_track': {'dx_tof_impact': 999.0, 'dz_tof_impact': 999.0}
#                   'track':     {'tof_bunch_crossing': -100.0, 'pid_tof_signal': 99999.0}
#                 , 'ad':        {'time': -1024.0}
#                 , 'v0':        {'time': -1024.0}
#                 }


# # values that are missing and do not have the masking value of -999
# # will be overwritten to -999
# missing_values: {}

target: ['mc_process_type', 'is_full_recon']
evt_id: 'event_id'
event_string: 'event'
# determines the number of tracks an event can have
# to be processed further, the rest will be discarded
#
# specify a range by using a tuple:
#   'tot_v0_mult': (0., 3.)
# if we want a standard cut such as 'tot_v0_mult' < 2. 
# we do: 
#   'tot_v0_mult': (-1e-1000, 2.)
# 1e1000 gets interpretet as inf
cut_dic: {'n_tracks': [2,3,4,5,6,7,8,9,10],
          'charge_sum': [-1,0,1],
          'lhc16_filter_noAD': 1
         }
# these features are no longer needed as they no longer contain
# information after the cut (may contain info if list contains more
# then 1 entry) 
remove_features: ['n_tracks', 'charge_sum', 'charge_sign', 'lhc16_filter_noAD']


# ########################################################################################
# NN structure if overlapping features with real data is not of importance but rather a 
# good performance
# ########################################################################################
[NN]
# data path are symbolic links to actual data
max_entries:  { 'fmd':          None,
                'ad':           None,
                'v0':           None, 
                'calo_cluster': 10,
                'emcal':        20,
                'phos':         40, 
                'event':        None,
                'track':        2 }


branches:   { 'fmd':           ['multiplicity']

            , 'ad':            ['multiplicity',
                                'adc_charge',
                                'time']

            , 'v0':            ['multiplicity',
                                'adc_charge',
                                'time',
                                'signal_width']

            , 'calo_cluster':  ['energy',
                                'shape_dispersion']
#                                 'chi2',
#                                 'cpv_distance']

            , 'emcal':         ['amplitude',
                                'time']

            , 'phos':          ['amplitude',
                                'time']
#
            , 'event':         ['event_id',
                                'charge_sum',
                                'lhc16_filter_noAD',
                                'n_tracks',
                                'n_tracklets',
                                'n_singles',
                                'n_tracks_total',
                                'n_residuals',
                             #  'n_tracks_its_only',
                                'is_full_recon',
                                'tot_ad_mult',
                             #  'tot_ad_time',
                             #  'tot_ad_charge',
                                'tot_fmd_mult',
                                'tot_v0_mult',
                             #  'tot_v0_time',
                             #  'tot_v0_charge',
                             #  'tot_v0_sig_width',
                                'tot_emc_ampl',
                             #  'tot_emc_time',
                                'tot_phos_ampl',
                             #  'tot_phos_time',
                                'mc_process_type']

            , 'track':         [ # 'event_id',
                              # 'tof_bunch_crossing',
                              # 'dca_vtx_z',
                                'pt',
                                'eta',
                                'phi',
                                'P',
                                'charge_sign',
                                'n_cls_its',
                                'n_cls_tpc',
                                # 'n_cls_trd',
                                'n_shared_cls_tpc',
                               # 'pid_global',
                               # 'pid_tpc_status',
                                'pid_tpc_signal',
                                'pid_tpc_n_sigma_pion',
                                'pid_tpc_n_sigma_kaon',
                                'pid_tpc_n_sigma_proton',
                              # 'pid_tpc_proba_pion',
                              # 'pid_tpc_proba_kaon',
                              # 'pid_tpc_proba_proton',
                              # 'pid_tof_status',
                              # 'pid_tof_signal',
                              # 'pid_tof_n_sigma_pion',
                              # 'pid_tof_n_sigma_kaon',
                              # 'pid_tof_n_sigma_proton',
                              # 'pid_tof_proba_pion',
                              # 'pid_tof_proba_kaon',
                              # 'pid_tof_proba_proton',
                              # 'pid_bayes_status',
                             
                              # add electron and muon
                              # and golden-chi2 
                                'pid_bayes_proba_electron',
                                'pid_bayes_proba_muon',
                                'golden_chi2',                             
                            
                                'pid_bayes_proba_pion',
                                'pid_bayes_proba_kaon',
                                'pid_bayes_proba_proton', 
                                'track_length',
                              # 'global_chi2',
                                'its_chi2',
                                'tpc_chi2',
                                'pid_its_signal',
                              # 'pid_its_signal_tuned',
                              # 'pid_hmpid_signal',
                              # 'pid_trd_signal',
                              # 'pid_tof_signal_tuned',
                              # 'pid_tpc_signal_tuned',
                                'xy_impact',
                                'z_impact'
                              # 'dx_tof_impact',
                              # 'dz_tof_impact',
                              # 'phi_on_emc',
                              # 'eta_on_emc',
                              # 'pt_on_emc',
                              # 'p_on_emc'
                            ]

          }

missing_values: {} 
# 'raw_track': {'dx_tof_impact': 999.0, 'dz_tof_impact': 999.0}
#                   'track':     {'tof_bunch_crossing': -100.0, 'pid_tof_signal': 99999.0}
#                 , 'ad':        {'time': -1024.0}
#                 , 'v0':        {'time': -1024.0}
#                 }


# # values that are missing and do not have the masking value of -999
# # will be overwritten to -999
# missing_values: {}

target: ['mc_process_type', 'is_full_recon']
evt_id: 'event_id'
event_string: 'event'
# determines the number of tracks an event can have
# to be processed further, the rest will be discarded
#
# specify a range by using a tuple:
#   'tot_v0_mult': (0., 3.)
# if we want a standard cut such as 'tot_v0_mult' < 2. 
# we do: 
#   'tot_v0_mult': (-1e-1000, 2.)
# 1e1000 gets interpretet as inf
cut_dic: {'n_tracks': [2],
          'charge_sum': [0],
          'lhc16_filter_noAD': 1
         }
# these features are no longer needed as they no longer contain
# information after the cut (may contain info if list contains more
# then 1 entry) 
remove_features: ['n_tracks', 'charge_sum', 'charge_sign', 'lhc16_filter_noAD']

